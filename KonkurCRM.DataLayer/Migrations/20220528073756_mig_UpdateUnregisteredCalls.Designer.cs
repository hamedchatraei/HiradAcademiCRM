// <auto-generated />
using System;
using KonkurCRM.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KonkurCRM.DataLayer.Migrations
{
    [DbContext(typeof(KonkurCRMContext))]
    [Migration("20220528073756_mig_UpdateUnregisteredCalls")]
    partial class mig_UpdateUnregisteredCalls
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.Adviser", b =>
                {
                    b.Property<int>("AdviserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdviserId"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JobMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("PersonalMobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Study")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("AdviserId");

                    b.HasIndex("ParentId");

                    b.ToTable("Advisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.AdviserGroup", b =>
                {
                    b.Property<int>("AdviserGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdviserGroupId"), 1L, 1);

                    b.Property<int>("AdviserId")
                        .HasColumnType("int");

                    b.Property<int?>("GroupAdviserGroupId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.HasKey("AdviserGroupId");

                    b.HasIndex("AdviserId");

                    b.HasIndex("GroupAdviserGroupId");

                    b.ToTable("AdviserGroups");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.GroupAdviser", b =>
                {
                    b.Property<int>("GroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupId"), 1L, 1);

                    b.Property<string>("GroupTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.HasKey("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("GroupAdvisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.Call", b =>
                {
                    b.Property<int>("CallId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CallId"), 1L, 1);

                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("CallTime")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCall")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("CallId");

                    b.HasIndex("RegisterId");

                    b.ToTable("Calls");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.FollowUp", b =>
                {
                    b.Property<int>("FollowUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FollowUpId"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FollowUpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowedUp")
                        .HasColumnType("bit");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("FollowUpId");

                    b.HasIndex("RegisterId");

                    b.ToTable("FollowUps");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.UnregisteredCalls", b =>
                {
                    b.Property<int>("UnregisteredCallsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnregisteredCallsId"), 1L, 1);

                    b.Property<int>("AdviserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CallDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("CallTime")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsCall")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UnregisteredCallsId");

                    b.HasIndex("AdviserId");

                    b.HasIndex("StudentId");

                    b.ToTable("UnregisteredCalls");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.UnregisteredFollowUp", b =>
                {
                    b.Property<int>("UnregisteredFollowUpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnregisteredFollowUpId"), 1L, 1);

                    b.Property<int>("AdviserId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("FollowUpDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFollowedUp")
                        .HasColumnType("bit");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("UnregisteredFollowUpId");

                    b.HasIndex("AdviserId");

                    b.HasIndex("StudentId");

                    b.ToTable("UnregisteredFollowUps");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Courses.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<DateTime>("CourseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Pays.Cheque", b =>
                {
                    b.Property<int>("ChequeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChequeId"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChequeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ForWho")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsPass")
                        .HasColumnType("bit");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.HasKey("ChequeId");

                    b.HasIndex("RegisterId");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Pays.Pay", b =>
                {
                    b.Property<int>("PayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PayId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PursuitCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.HasKey("PayId");

                    b.HasIndex("RegisterId");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Permission.Permission", b =>
                {
                    b.Property<int>("PermissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PermissionId"), 1L, 1);

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<string>("PermissionTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PermissionId");

                    b.HasIndex("ParentID");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Permission.RolePermission", b =>
                {
                    b.Property<int>("RP_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RP_Id"), 1L, 1);

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("RP_Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RolePermissions");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.AttributePlan", b =>
                {
                    b.Property<int>("APId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("APId"), 1L, 1);

                    b.Property<int>("PlanAttributeId")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.HasKey("APId");

                    b.HasIndex("PlanAttributeId");

                    b.HasIndex("PlanId");

                    b.ToTable("AttributePlans");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<string>("PlanTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PlanId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.PlanAttribute", b =>
                {
                    b.Property<int>("PlanAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanAttributeId"), 1L, 1);

                    b.Property<string>("Title")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PlanAttributeId");

                    b.ToTable("PlanAttributes");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.AdviserType", b =>
                {
                    b.Property<int>("AdviserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdviserTypeId"), 1L, 1);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdviserTypeId");

                    b.ToTable("AdviserType");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.Register", b =>
                {
                    b.Property<int>("RegisterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegisterId"), 1L, 1);

                    b.Property<int>("AdviserId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("FinalAmount")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("RegisterId");

                    b.HasIndex("AdviserId");

                    b.HasIndex("CourseId");

                    b.HasIndex("PlanId");

                    b.HasIndex("StudentId");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.Register_sAdviser", b =>
                {
                    b.Property<int>("RAId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RAId"), 1L, 1);

                    b.Property<int>("AdviserId")
                        .HasColumnType("int");

                    b.Property<int>("AdviserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("RegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("RAId");

                    b.HasIndex("AdviserId");

                    b.HasIndex("AdviserTypeId");

                    b.HasIndex("RegisterId");

                    b.ToTable("RegisterSAdvisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Settings.StartDayOfMonth", b =>
                {
                    b.Property<int>("SdmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SdmId"), 1L, 1);

                    b.Property<int>("SdmValue")
                        .HasColumnType("int");

                    b.HasKey("SdmId");

                    b.ToTable("StartDayOfMonths");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Grade", b =>
                {
                    b.Property<int>("GradeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GradeId"), 1L, 1);

                    b.Property<string>("GradeTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GradeId");

                    b.ToTable("Grades");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Family")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FatherName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GradeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile1")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Mobile2")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Mobile3")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("StudyId")
                        .HasColumnType("int");

                    b.HasKey("StudentId");

                    b.HasIndex("GradeId");

                    b.HasIndex("StudyId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Study", b =>
                {
                    b.Property<int>("StudyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudyId"), 1L, 1);

                    b.Property<string>("StudyTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("StudyId");

                    b.ToTable("Studies");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"), 1L, 1);

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("RoleTitle")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserAliasName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserAvatar")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.UserRole", b =>
                {
                    b.Property<int>("UR_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UR_ID"), 1L, 1);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UR_ID");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.Adviser", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", null)
                        .WithMany("Advisers")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.AdviserGroup", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", "Adviser")
                        .WithMany("AdviserGroups")
                        .HasForeignKey("AdviserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.GroupAdviser", "GroupAdviser")
                        .WithMany("AdviserGroups")
                        .HasForeignKey("GroupAdviserGroupId");

                    b.Navigation("Adviser");

                    b.Navigation("GroupAdviser");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.GroupAdviser", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.GroupAdviser", null)
                        .WithMany("GroupAdvisers")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.Call", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.Register", "Register")
                        .WithMany("Calls")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.FollowUp", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.Register", "Register")
                        .WithMany("FollowUps")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.UnregisteredCalls", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", "Adviser")
                        .WithMany("UnregisteredCalls")
                        .HasForeignKey("AdviserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Students.Student", "Student")
                        .WithMany("UnregisteredCalls")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adviser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Calls.UnregisteredFollowUp", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", "Adviser")
                        .WithMany("UnregisteredFollowUps")
                        .HasForeignKey("AdviserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Students.Student", "Student")
                        .WithMany("UnregisteredFollowUps")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adviser");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Pays.Cheque", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.Register", "Register")
                        .WithMany("Cheques")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Pays.Pay", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.Register", "Register")
                        .WithMany("Pays")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Register");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Permission.Permission", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Permission.Permission", null)
                        .WithMany("Permissions")
                        .HasForeignKey("ParentID");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Permission.RolePermission", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Permission.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.User.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.AttributePlan", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Plans.PlanAttribute", "PlanAttribute")
                        .WithMany("AttributePlans")
                        .HasForeignKey("PlanAttributeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Plans.Plan", "Plan")
                        .WithMany("AttributePlans")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Plan");

                    b.Navigation("PlanAttribute");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.Register", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", "Adviser")
                        .WithMany("Registers")
                        .HasForeignKey("AdviserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Courses.Course", "Course")
                        .WithMany("Registers")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Plans.Plan", "Plan")
                        .WithMany("Registers")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Students.Student", "Student")
                        .WithMany("Registers")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adviser");

                    b.Navigation("Course");

                    b.Navigation("Plan");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.Register_sAdviser", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Advisers.Adviser", "Adviser")
                        .WithMany("RegisterSAdvisers")
                        .HasForeignKey("AdviserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.AdviserType", "AdviserType")
                        .WithMany("RegisterSAdvisers")
                        .HasForeignKey("AdviserTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Register.Register", "Register")
                        .WithMany("RegisterSAdvisers")
                        .HasForeignKey("RegisterId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Adviser");

                    b.Navigation("AdviserType");

                    b.Navigation("Register");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Student", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.Students.Grade", "Grade")
                        .WithMany("Students")
                        .HasForeignKey("GradeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.Students.Study", "Study")
                        .WithMany("Students")
                        .HasForeignKey("StudyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Grade");

                    b.Navigation("Study");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.UserRole", b =>
                {
                    b.HasOne("KonkurCRM.DataLayer.Entities.User.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("KonkurCRM.DataLayer.Entities.User.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.Adviser", b =>
                {
                    b.Navigation("AdviserGroups");

                    b.Navigation("Advisers");

                    b.Navigation("RegisterSAdvisers");

                    b.Navigation("Registers");

                    b.Navigation("UnregisteredCalls");

                    b.Navigation("UnregisteredFollowUps");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Advisers.GroupAdviser", b =>
                {
                    b.Navigation("AdviserGroups");

                    b.Navigation("GroupAdvisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Courses.Course", b =>
                {
                    b.Navigation("Registers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Permission.Permission", b =>
                {
                    b.Navigation("Permissions");

                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.Plan", b =>
                {
                    b.Navigation("AttributePlans");

                    b.Navigation("Registers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Plans.PlanAttribute", b =>
                {
                    b.Navigation("AttributePlans");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.AdviserType", b =>
                {
                    b.Navigation("RegisterSAdvisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Register.Register", b =>
                {
                    b.Navigation("Calls");

                    b.Navigation("Cheques");

                    b.Navigation("FollowUps");

                    b.Navigation("Pays");

                    b.Navigation("RegisterSAdvisers");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Grade", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Student", b =>
                {
                    b.Navigation("Registers");

                    b.Navigation("UnregisteredCalls");

                    b.Navigation("UnregisteredFollowUps");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.Students.Study", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("KonkurCRM.DataLayer.Entities.User.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
